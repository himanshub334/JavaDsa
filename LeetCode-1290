//Approach 1
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int getDecimalValue(ListNode head) {
        ListNode p1 = head;
        int n = 0;

        while(p1!=null) {
            n++;
            p1 = p1.next;
        }
            int sum = 0;
            p1 = head;
        while(p1!= null){
            sum=sum + p1.val*(int)Math.pow(2,--n);
            p1 = p1.next;
        }
        return sum;
    }
}



//Approach 2
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int getDecimalValue(ListNode head) {
        int result = 0;
        while(head!=null) {
            result = result *2 +  head.val;
            head = head.next;
        }
        return result;
    }
}
